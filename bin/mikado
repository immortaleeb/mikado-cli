#!/usr/bin/env python3

import sys
import argparse

from mikado.cli.commands import InitCommand, ListCommand, AddCommand, CurrentCommand, SelectCommand, TreeCommand, RmCommand
from mikado.graph.project import DEFAULT_MIKADO_DIR

COMMANDS = {
    'init': InitCommand(),
    'list': ListCommand(),
    'add':  AddCommand(),
    'current': CurrentCommand(),
    'select': SelectCommand(),
    'tree': TreeCommand(),
    'rm': RmCommand(),
}

def build_argparser():
    parser = argparse.ArgumentParser(description='A cli tool for task management based on the mikado method')
    subparsers = parser.add_subparsers(dest='command')
    subparsers.required = True

    for command_name, command in COMMANDS.items():
        subparser = subparsers.add_parser(command_name, help=command.description, description=command.description)
        command.add_arguments(subparser)

    return parser

class Context:
    def __init__(self, *, mikado_dir):
        self.mikado_dir = mikado_dir

def run_command(argv):
    parser = build_argparser()

    args = parser.parse_args()

    command = COMMANDS[args.command]
    command.context = Context(mikado_dir=DEFAULT_MIKADO_DIR)

    command.run(args)

return_code = run_command(sys.argv)
sys.exit(return_code or 0)

